myCol = c("black","#D55E00","#E69F00","#009E73","#56B4E9")
#scatter(dapc1,1,2, col=myCol, bg="white", scree.da=FALSE, legend=TRUE, solid=.4,pch=20,  cell=1, cstar=1)
scatter(dapc1,1,2, ratio.pca=0.5, bg="white", pch=20, legend=TRUE, cell=2, cstar=1, col=myCol, solid=.7, cex=3, cex.sub=4,clab=0, mstree=FALSE, scree.da=TRUE,posi.da="topleft", ratio=.16)
dapc1 <- dapc(OB_lines, n.pca=30, n.da=4)
myCol = c("black","#D55E00","#E69F00","#009E73","#56B4E9")
#scatter(dapc1,1,2, col=myCol, bg="white", scree.da=FALSE, legend=TRUE, solid=.4,pch=20,  cell=1, cstar=1)
scatter(dapc1,1,2, ratio.pca=0.5, bg="white", pch=20, legend=TRUE, cell=2, cstar=1, col=myCol, solid=.7, cex=3, cex.sub=4,clab=0, mstree=FALSE, scree.da=TRUE,posi.da="topleft", ratio=.16)
dapc1 <- dapc(OB_lines, n.pca=25, n.da=4)
myCol = c("black","#D55E00","#E69F00","#009E73","#56B4E9")
#scatter(dapc1,1,2, col=myCol, bg="white", scree.da=FALSE, legend=TRUE, solid=.4,pch=20,  cell=1, cstar=1)
scatter(dapc1,1,2, ratio.pca=0.5, bg="white", pch=20, legend=TRUE, cell=2, cstar=1, col=myCol, solid=.7, cex=3, cex.sub=4,clab=0, mstree=FALSE, scree.da=TRUE,posi.da="topleft", ratio=.16)
library("reshape")
library("scales")
#g.member<-as.data.frame(dapc1$posterior)
g.member<-as.matrix(dapc1$posterior)
#g.member<-t(g.member)
g.member<-as.data.frame(melt.array(g.member))
g.member<-as.data.frame(g.member[order(g.member[,1]),])
colnames(g.member)<-c("Line","Population","Posterior.Prob")
p <- ggplot(g.member, aes(Line, Posterior.Prob, fill = Population)) + geom_bar(position="fill",stat="identity") + scale_y_continuous(labels = percent) + theme_bw() + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) + scale_fill_manual( values = c("black","#D55E00","#E69F00","#009E73","#56B4E9"))
p
dapc1 <- dapc(OB_lines, n.pca=10, n.da=4)
myCol = c("black","#D55E00","#E69F00","#009E73","#56B4E9")
#scatter(dapc1,1,2, col=myCol, bg="white", scree.da=FALSE, legend=TRUE, solid=.4,pch=20,  cell=1, cstar=1)
scatter(dapc1,1,2, ratio.pca=0.5, bg="white", pch=20, legend=TRUE, cell=2, cstar=1, col=myCol, solid=.7, cex=3, cex.sub=4,clab=0, mstree=FALSE, scree.da=TRUE,posi.da="topleft", ratio=.16)
#text(10,15000,"DAPC Separatin
myCol = c("black","#D55E00","#E69F00","#009E73","#56B4E9")
#scatter(dapc1,1,2, col=myCol, bg="white", scree.da=FALSE, legend=TRUE, solid=.4,pch=20,  cell=1, cstar=1)
scatter(dapc1,1,2, ratio.pca=0.5, bg="white", pch=20, legend=TRUE, cell=2, cstar=1, col=myCol, solid=.7, cex=3, cex.sub=4,clab=0, mstree=FALSE, scree.da=TRUE,posi.da="topleft", ratio=.16)
#text(10,15000,"DAPC Separatin
library("reshape")
library("scales")
#g.member<-as.data.frame(dapc1$posterior)
g.member<-as.matrix(dapc1$posterior)
#g.member<-t(g.member)
g.member<-as.data.frame(melt.array(g.member))
g.member<-as.data.frame(g.member[order(g.member[,1]),])
colnames(g.member)<-c("Line","Population","Posterior.Prob")
p <- ggplot(g.member, aes(Line, Posterior.Prob, fill = Population)) + geom_bar(position="fill",stat="identity") + scale_y_continuous(labels = percent) + theme_bw() + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) + scale_fill_manual( values = c("black","#D55E00","#E69F00","#009E73","#56B4E9"))
p
dapc1 <- dapc(OB_lines, n.pca=25, n.da=4)
#png("ChrX_Neutral_Sites_DAPC_F1F2.png", width=800,height=600)
pdf("ChrX_Neutral_Sites_DAPC_F1F2_test_colorblind.pdf", width=8,height=6)
myCol = c("black","#D55E00","#E69F00","#009E73","#56B4E9")
#scatter(dapc1,1,2, col=myCol, bg="white", scree.da=FALSE, legend=TRUE, solid=.4,pch=20,  cell=1, cstar=1)
scatter(dapc1,1,2, ratio.pca=0.5, bg="white", pch=20, legend=TRUE, cell=2, cstar=1, col=myCol, solid=.7, cex=3, cex.sub=4,clab=0, mstree=FALSE, scree.da=TRUE,posi.da="bottomright", ratio=.16)
#text(10,15000,"DAPC Separating For Functions 1&2: ChrX Neutral Sites",cex = 1,font=2)
#par(xpd=TRUE)
#points(dapc1$grp.coord[,1], dapc1$grp.coord[,2], pch=4, cex=2, lwd=6, col="darkgrey")
#points(dapc1$grp.coord[,1], dapc1$grp.coord[,2], pch=4, cex=2, lwd=2, col=myCol)
dev.off()
pdf("ChrX_Neutral_Sites_DAPC_GroupProbs_colorblind.pdf", width=14,height=5)
library("reshape")
library("scales")
#g.member<-as.data.frame(dapc1$posterior)
g.member<-as.matrix(dapc1$posterior)
#g.member<-t(g.member)
g.member<-as.data.frame(melt.array(g.member))
g.member<-as.data.frame(g.member[order(g.member[,1]),])
colnames(g.member)<-c("Line","Population","Posterior.Prob")
p <- ggplot(g.member, aes(Line, Posterior.Prob, fill = Population)) + geom_bar(position="fill",stat="identity") + scale_y_continuous(labels = percent) + theme_bw() + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) + scale_fill_manual( values = c("black","#D55E00","#E69F00","#009E73","#56B4E9"))
p
dev.off()
setwd("~/Documents/projects/obesity_popgen/demo/callability_masked/DAPC/autosomes_callability_masked")
library("adegenet")
library("ggplot2")
library("reshape")
OB_lines<-read.snp("autosomes_IBD_masked_biallelic_ZW184removed_Callability_masked_biallelic_neutral_sites.snp",multicore=TRUE)
#OB_lines<-read.snp("autosomes_fullymasked_neutralsites_NonAfrican_NonBeijing.snp",multicore=TRUE)
find.clusters(OB_lines,max.n.clust=80)
################# DAPC  #############################
dapc1 <- dapc(OB_lines, n.pca=30, n.da=4)
myCol = c("black","#D55E00","#E69F00","#009E73","#56B4E9")
#scatter(dapc1,1,2, col=myCol, bg="white", scree.da=FALSE, legend=TRUE, solid=.4,pch=20,  cell=1, cstar=1)
scatter(dapc1,1,2, ratio.pca=0.5, bg="white", pch=20, legend=TRUE, cell=2, cstar=1, col=myCol, solid=.7, cex=3, cex.sub=4,clab=0, mstree=FALSE, scree.da=TRUE,posi.da="topleft", ratio=.16)
#text(10,15000,"DAPC Separating For Functions 1&2: Autosomal Neutral Sites",cex = 1,font=2)
#par(xpd=TRUE)
g.member<-as.matrix(dapc1$posterior)
#g.member<-t(g.member)
g.member<-as.data.frame(melt.array(g.member))
g.member<-as.data.frame(g.member[order(g.member[,1]),])
colnames(g.member)<-c("Line","Population","Posterior.Prob")
p <- ggplot(g.member, aes(Line, Posterior.Prob, fill = Population)) + geom_bar(position="fill",stat="identity") + scale_y_continuous(labels = percent) + theme_bw() + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) + scale_fill_manual( values = c("black","#D55E00","#E69F00","#009E73","#56B4E9"))
p
dapc1 <- dapc(OB_lines, n.pca=25, n.da=4)
myCol = c("black","#D55E00","#E69F00","#009E73","#56B4E9")
#scatter(dapc1,1,2, col=myCol, bg="white", scree.da=FALSE, legend=TRUE, solid=.4,pch=20,  cell=1, cstar=1)
scatter(dapc1,1,2, ratio.pca=0.5, bg="white", pch=20, legend=TRUE, cell=2, cstar=1, col=myCol, solid=.7, cex=3, cex.sub=4,clab=0, mstree=FALSE, scree.da=TRUE,posi.da="topleft", ratio=.16)
#text(10,15000,"DAPC Separating For Functions 1&2: Autosomal Neutral Sites",cex = 1,font=2)
#par(
#g.member<-as.data.frame(dapc1$posterior)
g.member<-as.matrix(dapc1$posterior)
#g.member<-t(g.member)
g.member<-as.data.frame(melt.array(g.member))
g.member<-as.data.frame(g.member[order(g.member[,1]),])
colnames(g.member)<-c("Line","Population","Posterior.Prob")
p <- ggplot(g.member, aes(Line, Posterior.Prob, fill = Population)) + geom_bar(position="fill",stat="identity") + scale_y_continuous(labels = percent) + theme_bw() + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) + scale_fill_manual( values = c("black","#D55E00","#E69F00","#009E73","#56B4E9"))
p
#png("Autosomal_Neutral_Sites_DAPC_F1.png", width=800,height=600)
png("shit.png", width=800,height=600)
myCol = c("blue","red","darkorange","black","purple")
scatter(dapc1,1,1, col=myCol, bg="white", scree.da=FALSE, legend=TRUE, solid=.4)
title("DAPC Separating For Function 1: Autosomal Neutral Sites")
dev.off()
png("Autosomal_Neutral_Sites_DAPC_F2.png", width=800,height=600)
myCol = c("blue","red","darkorange","black","purple")
scatter(dapc1,2,2, col=myCol, bg="white", scree.da=FALSE, legend=TRUE, solid=.4)
title("DAPC Separating For Function 2: Autosomal Neutral Sites")
dev.off()
png("Autosomal_Neutral_Sites_DAPC_F3.png", width=800,height=600)
myCol = c("blue","red","darkorange","black","purple")
scatter(dapc1,3,3, col=myCol, bg="white", scree.da=FALSE, legend=TRUE, solid=.4)
title("DAPC Separating For Function 3: Autosomal Neutral Sites")
dev.off()
png("Autosomal_Neutral_Sites_DAPC_F4.png", width=800,height=600)
myCol = c("blue","red","darkorange","black","purple")
scatter(dapc1,4,4, col=myCol, bg="white", scree.da=FALSE, legend=TRUE, solid=.4)
title("DAPC Separating For Function 4: Autosomal Neutral Sites")
dev.off()
#png("Autosomal_Neutral_Sites_DAPC_F1F2.png", width=800,height=600)
pdf("Autosomal_Neutral_Sites_DAPC_F1F2_colorblind.pdf", width=8,height=6)
myCol = c("black","#D55E00","#E69F00","#009E73","#56B4E9")
#scatter(dapc1,1,2, col=myCol, bg="white", scree.da=FALSE, legend=TRUE, solid=.4,pch=20,  cell=1, cstar=1)
scatter(dapc1,1,2, ratio.pca=0.5, bg="white", pch=20, legend=TRUE, cell=2, cstar=1, col=myCol, solid=.7, cex=3, cex.sub=4,clab=0, mstree=FALSE, scree.da=TRUE,posi.da="topleft", ratio=.16)
#text(10,15000,"DAPC Separating For Functions 1&2: Autosomal Neutral Sites",cex = 1,font=2)
#par(xpd=TRUE)
#points(dapc1$grp.coord[,1], dapc1$grp.coord[,2], pch=4, cex=2, lwd=6, col="darkgrey")
#points(dapc1$grp.coord[,1], dapc1$grp.coord[,2], pch=4, cex=2, lwd=2, col=myCol)
dev.off()
png("Autosomal_Neutral_Sites_DAPC_GroupAssignment.png", width=800,height=600)
assignplot(dapc1, subset=1:84,cex=0.4)
title("DAPC Group Assignment: Autosomal Neutral Sites")
dev.off()
png("Autosomal_Neutral_Sites_DAPC_GroupProbs.png", width=800,height=600)
compoplot(dapc1, posi="bottomright", lab=OB_lines$pop, ncol=1, xlab="individuals",cex.names=0.4,col=myCol)
title("DAPC Group Assignment Probs: Autosomal Neutral Sites")
dev.off()
pdf("Autosomal_Neutral_Sites_DAPC_GroupProbs_colorblind.pdf", width=14,height=5)
library("reshape")
library("scales")
#g.member<-as.data.frame(dapc1$posterior)
g.member<-as.matrix(dapc1$posterior)
#g.member<-t(g.member)
g.member<-as.data.frame(melt.array(g.member))
g.member<-as.data.frame(g.member[order(g.member[,1]),])
colnames(g.member)<-c("Line","Population","Posterior.Prob")
p <- ggplot(g.member, aes(Line, Posterior.Prob, fill = Population)) + geom_bar(position="fill",stat="identity") + scale_y_continuous(labels = percent) + theme_bw() + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) + scale_fill_manual( values = c("black","#D55E00","#E69F00","#009E73","#56B4E9"))
p
dev.off()
loadingplot(dapc1$var.contr, thres=1e-3)
library("adegenet")
library("ggplot2")
library("reshape")
OB_lines<-read.snp("autosomal_IBD_Callability_masked_ZW184removed_biallelic_neutral_sites_random_allele_polarized_dadi_input_postprob_anc_above95_positions.snp",multicore=TRUE)
install.packages("adegenet")
library("adegenet")
version(adegene)
version(adegenet)
versiona(adegenet)
sessionInfo()
library("adegenet")
library("ggplot2")
library("reshape")
sessionInfo()
OB_lines<-read.snp("autosomal_IBD_Callability_masked_ZW184removed_biallelic_neutral_sites_random_allele_polarized_dadi_input_postprob_anc_above95_positions.snp",multicore=TRUE)
setwd("~/Dropbox/fly_demo/DAPC")
OB_lines<-read.snp("autosomal_IBD_Callability_masked_ZW184removed_biallelic_neutral_sites_random_allele_polarized_dadi_input_postprob_anc_above95_positions.snp",multicore=TRUE)
temp <- density(position(OB_lines), bw=10)
plot(temp, type="n", xlab="Position Along Chromosome", main="Location of OB_lines Neutral SNPs", xlim=c(0,30000000))
polygon(c(temp$x,rev(temp$x)), c(temp$y, rep(0,length(temp$x))), col=transp("green",.2))
points(position(OB_lines), rep(0, nLoc(OB_lines)), pch="|", col="grey")
glPlot(OB_lines, posi="topleft",col=c("black","darkgreen","purple"))
title("Missing Data Autosomal")
OB_groups <- find.clusters(OB_lines, max.n.clust=6)
table.value(table(pop(OB_lines), OB_groups$grp), col.lab=paste("inf", 1:5), row.lab=paste("ori", 1:5))
pca1 <- glPca(OB_lines,nf=50)
scatter(pca1,posi="topright",  main="2D PCA For Autosomal Neutral Sites",cex=0.3)
myCol <- colorplot(pca1$scores,pca1$scores, transp=TRUE, cex=4, alpha=0.8, main="")
abline(h=0,v=0, col="lightgrey")
add.scatter.eig(pca1$eig[1:40],2,1,2, posi="bottomright", inset=0.15, ratio=.2)
myCol <- colorplot(pca1$scores[,c(2,3)],pca1$scores[,c(2,3)], transp=TRUE, cex=4, alpha=0.8, main="")
abline(h=0,v=0, col="lightgrey")
add.scatter.eig(pca1$eig[1:40],2,2,3, posi="bottomleft", inset=0.15, ratio=.2)
myCol <- colorplot(pca1$scores,pca1$scores, transp=TRUE, cex=4, alpha=0.8, main="")
abline(h=0,v=0, col="lightgrey")
add.scatter.eig(pca1$eig[1:40],2,1,2, posi="bottomright", inset=0.15, ratio=.2)
tre <- nj(dist(as.matrix(OB_lines)))
plot(tre,show.tip=TRUE,cex=1, main="NJ Tree For Autosomal Neutral Sites")
tiplabels(pch=20, col=myCol, cex=2)
title("Autosomal Neutral Sites NJ Tree")
?nj
tre <- nj(dist(as.matrix(OB_lines)))
dapc1 <- dapc(OB_lines, n.pca=25, n.da=5)
myCol = c("blue","red","darkorange","black","purple")
scatter(dapc1,1,1, col=myCol, bg="white", scree.da=FALSE, legend=TRUE, solid=.4)
title("DAPC Separating For Function 1: Autosomal Neutral Sites")
myCol = c("blue","red","darkorange","black","purple")
scatter(dapc1,2,2, col=myCol, bg="white", scree.da=FALSE, legend=TRUE, solid=.4)
title("DAPC Separating For Function 2: Autosomal Neutral Sites")
myCol = c("blue","red","darkorange","black","purple")
scatter(dapc1,3,3, col=myCol, bg="white", scree.da=FALSE, legend=TRUE, solid=.4)
title("DAPC Separating For Function 3: Autosomal Neutral Sites")
myCol = c("blue","red","darkorange","black","purple")
scatter(dapc1,4,4, col=myCol, bg="white", scree.da=FALSE, legend=TRUE, solid=.4)
title("DAPC Separating For Function 4: Autosomal Neutral Sites")
myCol = c("black","#D55E00","#E69F00","#009E73","#56B4E9")
#scatter(dapc1,1,2, col=myCol, bg="white", scree.da=FALSE, legend=TRUE, solid=.4,pch=20,  cell=1, cstar=1)
scatter(dapc1,1,2, ratio.pca=0.5, bg="white", pch=20, legend=TRUE, cell=2, cstar=1, col=myCol, solid=.7, cex=3, cex.sub=4,clab=0, mstree=FALSE, scree.da=TRUE,posi.da="topleft", ratio=.16)
assignplot(dapc1, subset=1:84,cex=0.4)
title("DAPC Group Assignment: Autosomal Neutral Sites")
library("reshape")
library("scales")
#g.member<-as.data.frame(dapc1$posterior)
g.member<-as.matrix(dapc1$posterior)
#g.member<-t(g.member)
g.member<-as.data.frame(melt.array(g.member))
g.member<-as.data.frame(g.member[order(g.member[,1]),])
colnames(g.member)<-c("Line","Population","Posterior.Prob")
p <- ggplot(g.member, aes(Line, Posterior.Prob, fill = Population)) + geom_bar(position="fill",stat="identity") + scale_y_continuous(labels = percent) + theme_bw() + theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) + scale_fill_manual( values = c("black","#D55E00","#E69F00","#009E73","#56B4E9"))
p
scatter(pca1,posi="topright",  main="2D PCA For Autosomal Neutral Sites",cex=0.3)
?scatter
myCol = c("blue","red","darkorange","black","purple")
scatter(dapc1,1,1, col=myCol, bg="white", scree.da=FALSE, legend=TRUE, solid=.4)
title("DAPC Separating For Function 1: Autosomal Neutral Sites")
myCol = c("black","#D55E00","#E69F00","#009E73","#56B4E9")
#scatter(dapc1,1,2, col=myCol, bg="white", scree.da=FALSE, legend=TRUE, solid=.4,pch=20,  cell=1, cstar=1)
scatter(dapc1,1,2, ratio.pca=0.5, bg="white", pch=20, legend=TRUE, cell=2, cstar=1, col=myCol, solid=.7, cex=3, cex.sub=4,clab=0, mstree=FALSE, scree.da=TRUE,posi.da="topleft", ratio=.16)
#text(10,15000,"DAPC Separating For Functions 1&2: Autosomal Neutral Sites",cex = 1,font=2)
#par(xpd=TRUE)
#points(dapc1$grp.coord[,1], dapc1$grp.coord[,2], pch=4, cex=2, lwd=6, col="darkgrey")
#points(dapc1$grp.coord[,1], dapc1$grp.coord[,2], pch=4, cex=2, lwd=2, col=myCol)
setwd("~/Dropbox/fly_demo/FastSimCoal_Results/pred_sims")
obs_stats_full=read.table("full_data/obs_stats.txt",T)
pred_stats_full=read.table("full_data/predicted_stats_fsc_dro02.txt",T)
obs_stats_reduced=read.table("pred_sims_1pop_model02_reduced_1K/obs_stats.txt",T)
pred_stats_reduced=read.table("pred_sims_1pop_model02_reduced_1K/predicted_stats_fsc_dro02.txt",T)
#Comapring observed and predicted pi and tajima's D
par(mfrow=c(3,2))
#First plot results for full data
plot(density(pred_stats_full$pi), xlim=c(0.008,0.013), main="Nucleotide diversity - Full data", xlab=expression(pi), las=1)
abline(v=obs_stats_full$pi, col="red", lty=2)
plot(density(pred_stats_full$D), xlim=c(-0.4,-0.2), main="Tajima's DFull data", xlab=expression(italic(D)), las=1)
abline(v=obs_stats_full$D, col="red", lty=2)
#the plot results for reduced data
plot(density(pred_stats_reduced$pi), xlim=c(0.008,0.013), main="Nucleotide diversity - high-conf. data", xlab=expression(pi), las=1)
abline(v=obs_stats_reduced$pi, col="red", lty=2)
plot(density(pred_stats_reduced$D), xlim=c(-0.4,-0.2), main="Tajima's D - high-conf. data", xlab=expression(italic(D)), las=1)
abline(v=obs_stats_reduced$D, col="red", lty=2)
#Comapring observed and expected SFS
obs_sfs_full=read.table("full_data/obs_sfs.txt",T)
pred_sfs_full=apply(read.table("full_data/predicted_sfs_fsc_dro02.txt",T),2,mean)
obs_sfs_reduced=read.table("pred_sims_1pop_model02_reduced_1K/obs_sfs.txt",T)
pred_sfs_reduced=apply(read.table("pred_sims_1pop_model02_reduced_1K/predicted_sfs_fsc_dro02.txt",T),2,mean)
#First plot results for full datasets
full=as.matrix(rbind(obs_sfs_full, pred_sfs_full))
barplot(full,beside=T, main="SFS - Full data", names=c(1:11))
reduced=as.matrix(rbind(obs_sfs_reduced, pred_sfs_reduced))
barplot(reduced, beside=T, main="SFS \n High-conf. data", names=c(1:11))
legend("topright",legend = c("obs","exp"), fill= c("black","grey"),cex=0.6)
obs_stats_full=read.table("full_data/obs_stats.txt",T)
pred_stats_full=read.table("full_data/predicted_stats_fsc_dro02.txt",T)
obs_stats_reduced=read.table("pred_sims_1pop_model02_reduced_1K/obs_stats.txt",T)
pred_stats_reduced=read.table("pred_sims_1pop_model02_reduced_1K/predicted_stats_fsc_dro02.txt",T)
#Comapring observed and predicted pi and tajima's D
par(mfrow=c(3,2))
#First plot results for full data
plot(density(pred_stats_full$pi), xlim=c(0.008,0.013), main="Nucleotide diversity - Full data", xlab=expression(pi), las=1)
abline(v=obs_stats_full$pi, col="red", lty=2)
plot(density(pred_stats_full$D), xlim=c(-0.4,-0.2), main="Tajima's DFull data", xlab=expression(italic(D)), las=1)
abline(v=obs_stats_full$D, col="red", lty=2)
#the plot results for reduced data
plot(density(pred_stats_reduced$pi), xlim=c(0.008,0.013), main="Nucleotide diversity - high-conf. data", xlab=expression(pi), las=1)
abline(v=obs_stats_reduced$pi, col="red", lty=2)
plot(density(pred_stats_reduced$D), xlim=c(-0.4,-0.2), main="Tajima's D - high-conf. data", xlab=expression(italic(D)), las=1)
abline(v=obs_stats_reduced$D, col="red", lty=2)
#Comapring observed and expected SFS
obs_sfs_full=read.table("full_data/obs_sfs.txt",T)
pred_sfs_full=apply(read.table("full_data/predicted_sfs_fsc_dro02.txt",T),2,mean)
obs_sfs_reduced=read.table("pred_sims_1pop_model02_reduced_1K/obs_sfs.txt",T)
pred_sfs_reduced=apply(read.table("pred_sims_1pop_model02_reduced_1K/predicted_sfs_fsc_dro02.txt",T),2,mean)
#First plot results for full datasets
full=as.matrix(rbind(obs_sfs_full, pred_sfs_full))
barplot(full,beside=T, main="SFS - Full data", names=c(1:11))
reduced=as.matrix(rbind(obs_sfs_reduced, pred_sfs_reduced))
barplot(reduced, beside=T, main="SFS \n High-conf. data", names=c(1:11))
legend("topright",legend = c("obs","exp"), fill= c("black","grey"),cex=0.1)
full=as.matrix(rbind(obs_sfs_full, pred_sfs_full))
barplot(full,beside=T, main="SFS - Full data", names=c(1:11))
reduced=as.matrix(rbind(obs_sfs_reduced, pred_sfs_reduced))
barplot(reduced, beside=T, main="SFS \n High-conf. data", names=c(1:11))
legend("topright",legend = c("obs","exp"), fill= c("black","grey"),cex=0.5)
setwd("~/Dropbox/fly_demo/FastSimCoal_Results/pred_sims")
obs_stats_full=read.table("full_data/obs_stats.txt",T)
pred_stats_full=read.table("full_data/predicted_stats_fsc_dro02.txt",T)
obs_stats_reduced=read.table("pred_sims_1pop_model02_reduced_1K/obs_stats.txt",T)
pred_stats_reduced=read.table("pred_sims_1pop_model02_reduced_1K/predicted_stats_fsc_dro02.txt",T)
obs_stats_full=read.table("full_data/obs_stats.txt",T)
pred_stats_full=read.table("full_data/predicted_stats_fsc_dro02.txt",T)
obs_stats_reduced=read.table("pred_sims_1pop_model02_reduced_1K/obs_stats.txt",T)
pred_stats_reduced=read.table("pred_sims_1pop_model02_reduced_1K/predicted_stats_fsc_dro02.txt",T)
#Comapring observed and predicted pi and tajima's D
par(mfrow=c(3,2))
#First plot results for full data
plot(density(pred_stats_full$pi), xlim=c(0.008,0.013), main="Nucleotide diversity - Full data", xlab=expression(pi), las=1)
abline(v=obs_stats_full$pi, col="red", lty=2)
plot(density(pred_stats_full$D), xlim=c(-0.4,-0.2), main="Tajima's DFull data", xlab=expression(italic(D)), las=1)
abline(v=obs_stats_full$D, col="red", lty=2)
#the plot results for reduced data
plot(density(pred_stats_reduced$pi), xlim=c(0.008,0.013), main="Nucleotide diversity - high-conf. data", xlab=expression(pi), las=1)
abline(v=obs_stats_reduced$pi, col="red", lty=2)
plot(density(pred_stats_reduced$D), xlim=c(-0.4,-0.2), main="Tajima's D - high-conf. data", xlab=expression(italic(D)), las=1)
abline(v=obs_stats_reduced$D, col="red", lty=2)
#Comapring observed and expected SFS
obs_sfs_full=read.table("full_data/obs_sfs.txt",T)
pred_sfs_full=apply(read.table("full_data/predicted_sfs_fsc_dro02.txt",T),2,mean)
obs_sfs_reduced=read.table("pred_sims_1pop_model02_reduced_1K/obs_sfs.txt",T)
pred_sfs_reduced=apply(read.table("pred_sims_1pop_model02_reduced_1K/predicted_sfs_fsc_dro02.txt",T),2,mean)
#First plot results for full datasets
full=as.matrix(rbind(obs_sfs_full, pred_sfs_full))
barplot(full,beside=T, main="SFS - Full data", names=c(1:11))
reduced=as.matrix(rbind(obs_sfs_reduced, pred_sfs_reduced))
barplot(reduced, beside=T, main="SFS \n High-conf. data", names=c(1:11))
legend("topright",legend = c("obs","exp"), fill= c("black","grey"),cex=0.5)
obs_stats_full=read.table("full_data/obs_stats.txt",T)
pred_stats_full=read.table("full_data/predicted_stats_fsc_dro02.txt",T)
obs_stats_reduced=read.table("pred_sims_1pop_model02_reduced_1K/obs_stats.txt",T)
pred_stats_reduced=read.table("pred_sims_1pop_model02_reduced_1K/predicted_stats_fsc_dro02.txt",T)
#Comapring observed and predicted pi and tajima's D
par(mfrow=c(3,2))
#First plot results for full data
plot(density(pred_stats_full$pi), xlim=c(0.008,0.013), main="Nucleotide diversity - Full data", xlab=expression(pi), las=1)
abline(v=obs_stats_full$pi, col="red", lty=2)
plot(density(pred_stats_full$D), xlim=c(-0.4,-0.2), main="Tajima's DFull data", xlab=expression(italic(D)), las=1)
abline(v=obs_stats_full$D, col="red", lty=2)
#the plot results for reduced data
plot(density(pred_stats_reduced$pi), xlim=c(0.008,0.013), main="Nucleotide diversity - high-conf. data", xlab=expression(pi), las=1)
abline(v=obs_stats_reduced$pi, col="red", lty=2)
plot(density(pred_stats_reduced$D), xlim=c(-0.4,-0.2), main="Tajima's D - high-conf. data", xlab=expression(italic(D)), las=1)
abline(v=obs_stats_reduced$D, col="red", lty=2)
#Comapring observed and expected SFS
obs_sfs_full=read.table("full_data/obs_sfs.txt",T)
pred_sfs_full=apply(read.table("full_data/predicted_sfs_fsc_dro02.txt",T),2,mean)
obs_sfs_reduced=read.table("pred_sims_1pop_model02_reduced_1K/obs_sfs.txt",T)
pred_sfs_reduced=apply(read.table("pred_sims_1pop_model02_reduced_1K/predicted_sfs_fsc_dro02.txt",T),2,mean)
#First plot results for full datasets
full=as.matrix(rbind(obs_sfs_full, pred_sfs_full))
barplot(full,beside=T, main="SFS - Full data", names=c(1:11))
reduced=as.matrix(rbind(obs_sfs_reduced, pred_sfs_reduced))
barplot(reduced, beside=T, main="SFS \n High-conf. data", names=c(1:11))
legend("topright",legend = c("obs","exp"), fill= c("black","grey"),cex=0.9)
2387495- 	85362.0769231
2773556-99162.1538462
2773556-  114957.85624
2773556-123227.03785
2773556-125909.231254
install.packages("rmarkdown")
setwd("~/Dropbox/fly_demo/DAPC")
sessionInfo()
N
OB_lines<-read.snp("autosomal_IBD_Callability_masked_ZW184removed_biallelic_neutral_sites_random_allele_polarized_dadi_input.txt",multicore=TRUE)
setwd("~/Dropbox/fly_demo/DAPC")
OB_lines<-read.snp("autosomal_IBD_Callability_masked_ZW184removed_biallelic_neutral_sites_random_allele_polarized_dadi_input.txt",multicore=TRUE)
OB_lines<-read.snp("autosomes_IBD_masked_biallelic_ZW184removed_Callability_masked_biallelic_neutral_sites.snp",multicore=TRUE)
OB_groups <- find.clusters(OB_lines, max.n.clust=12,na.action="omit")
OB_groups <- find.clusters(OB_lines, max.n.clust=12,na.action="omit")
?find.clusters
OB_groups <- find.clusters(OB_lines, max.n.clust=12,choose.n.clust=FALSE, criterion="goodfit")
plot(OB_groups$Kstat, type="b", col="blue")
OB_groups <- find.clusters(OB_lines, max.n.clust=20,choose.n.clust=FALSE, criterion="smoothNgoesup", n.pca=200)
plot(OB_groups$Kstat, type="b", col="blue")
par=c(1,1)
plot(OB_groups$Kstat, type="b", col="blue")
par(maf=c(1,1))
par(maf=c(1,1))
plot(1)
par(mfrow=c(1,1))
plot(OB_groups$Kstat, type="b", col="blue")
pca1 <- glPca(OB_lines,nf=50)
scatter(pca1,posi="topright",  main="2D PCA For Autosomal Neutral Sites",cex=0.3)
myCol <- colorplot(pca1$scores,pca1$scores, transp=TRUE, cex=4, alpha=0.8, main="")
abline(h=0,v=0, col="lightgrey")
add.scatter.eig(pca1$eig[1:40],2,1,2, posi="bottomright", inset=0.15, ratio=.2)
myCol <- colorplot(pca1$scores[,c(2,3)],pca1$scores[,c(2,3)], transp=TRUE, cex=4, alpha=0.8, main="")
abline(h=0,v=0, col="lightgrey")
add.scatter.eig(pca1$eig[1:40],2,2,3, posi="bottomleft", inset=0.15, ratio=.2)
tre <- nj(dist(as.matrix(OB_lines)))
plot(tre,show.tip=TRUE,cex=1, main="NJ Tree For Autosomal Neutral Sites")
tiplabels(pch=20, col=myCol, cex=2)
title("Autosomal Neutral Sites NJ Tree")
myCol <- colorplot(pca1$scores,pca1$scores, transp=TRUE, cex=4, alpha=0.8, main="")
abline(h=0,v=0, col="lightgrey")
add.scatter.eig(pca1$eig[1:40],2,1,2, posi="bottomright", inset=0.15, ratio=.2)
table.value(table(pop(OB_lines), OB_groups$grp), col.lab=paste("inf", 1:5), row.lab=paste("ori", 1:5))
OB_groups$grp
names(OB_groups)
OB_groups
OB_groups <- find.clusters(OB_lines, max.n.clust=12,choose.n.clust=FALSE, criterion="diffNgroup", n.pca=120)
table.value(table(pop(OB_lines), OB_groups$grp), col.lab=paste("inf", 1:5), row.lab=paste("ori", 1:5))
#title("Au
scatter(pca1,posi="topright",  main="2D PCA For Autosomal Neutral Sites",cex=0.3)
plot(OB_groups$Kstat, type="b", col="blue")
plot(OB_groups$Kstat, type="b", col="blue")
OB_groups
plot(OB_groups$Kstat, type="o", xlab="number of clusters (K)", ylab="BIC",
col="blue", main="Detection based on BIC")
points(2, foo.BIC$Kstat[2], pch="x", cex=3)
mtext(3, tex="'X' indicates the actual number of clusters")
plot(OB_groups$Kstat, type="o", xlab="number of clusters (K)", ylab="BIC",
col="blue", main="Detection based on BIC")
points(2, OB_groups$Kstat[2], pch="x", cex=3)
mtext(3, tex="'X' indicates the actual number of clusters")
plot(OB_groups$Kstat, type="o", xlab="number of clusters (K)", ylab="BIC",col="blue", main="Detection based on BIC")
points(2, OB_groups$Kstat[2], pch="x", cex=3)
mtext(3, tex="'X' indicates the actual number of clusters")
plot(OB_groups$Kstat, type="o", xlab="number of clusters (K)", ylab="BIC",col="blue", main="Detection based on BIC")
points(2, OB_groups$Kstat[2], pch="x", cex=3)
mtext(3, tex="'X' indicates the actual number of clusters")
?glPca
pca1 <- glPca(OB_lines,nf=50,parallel = require("parallel"),n.cores = 3)
scatter(pca1,posi="topright",  main="2D PCA For Autosomal Neutral Sites",cex=0.3)
myCol <- colorplot(pca1$scores,pca1$scores, transp=TRUE, cex=4, alpha=0.8, main="")
abline(h=0,v=0, col="lightgrey")
add.scatter.eig(pca1$eig[1:40],2,1,2, posi="bottomright", inset=0.15, ratio=.2)
?dapc
barplot(pca1$eig, main="eigenvalues", col=heat.colors(length(pca1$eig)))
dapc1 <- dapc(glPca=OB_lines, n.pca=25, n.da=5, center=TRUE, scale=TRUE)
dapc1 <- dapc(OB_lines,glPca=OB_lines, n.pca=25, n.da=5, center=TRUE, scale=TRUE)
dapc1 <- dapc(OB_lines, n.pca=25, n.da=5, center=TRUE, scale=TRUE)
dapc1 <- dapc(OB_lines, n.pca=25, n.da=5, center=TRUE, scale=TRUE)
dapc1 <- dapc(OB_lines, n.pca=25, n.da=5, center=0, scale=TRUE)
dapc1 <- dapc(OB_lines, n.pca=25, n.da=5, scale=TRUE)
dapc1 <- dapc(OB_lines, n.pca=25, n.da=5)
OB_lines
OB_lines$OB_lines
OB_lines
pca1
OB_groups
OB_groups$grp
dapc1 <- dapc(OB_lines, n.pca=25, n.da=5)
myCol = c("blue","red","darkorange","black","purple")
scatter(dapc1,1,1, col=myCol, bg="white", scree.da=FALSE, legend=TRUE, solid=.4)
title("DAPC Separating For Function 1: Autosomal Neutral Sites")
myCol = c("black","#D55E00","#E69F00","#009E73","#56B4E9")
#scatter(dapc1,1,2, col=myCol, bg="white", scree.da=FALSE, legend=TRUE, solid=.4,pch=20,  cell=1, cstar=1)
scatter(dapc1,1,2, ratio.pca=0.5, bg="white", pch=20, legend=TRUE, cell=2, cstar=1, col=myCol, solid=.7, cex=3, cex.sub=4,clab=0, mstree=FALSE, scree.da=TRUE,posi.da="topleft", ratio=.16)
#text(10,15000,"DAPC Separating For Functions 1&2: Autosomal Neutral Sites",cex = 1,font=2)
#par(xpd=TRUE)
scatter(pca1,posi="topright",  main="2D PCA For Autosomal Neutral Sites",cex=0.3)
myCol <- colorplot(pca1$scores,pca1$scores, transp=TRUE, cex=4, alpha=0.8, main="")
abline(h=0,v=0, col="lightgrey")
add.scatter.eig(pca1$eig[1:40],2,1,2, posi="bottomright", inset=0.15, ratio=.2)
scatter(dapc1,1,2, ratio.pca=0.5, bg="white", pch=20, legend=TRUE, cell=2, cstar=1, col=myCol, solid=.7, cex=3, cex.sub=4,clab=0, mstree=FALSE, scree.da=TRUE,posi.da="topleft", ratio=.16)
myCol = c("black","#D55E00","#E69F00","#009E73","#56B4E9")
#scatter(dapc1,1,2, col=myCol, bg="white", scree.da=FALSE, legend=TRUE, solid=.4,pch=20,  cell=1, cstar=1)
scatter(dapc1,1,2, ratio.pca=0.5, bg="white", pch=20, legend=TRUE, cell=2, cstar=1, col=myCol, solid=.7, cex=3, cex.sub=4,clab=0, mstree=FALSE, scree.da=TRUE,posi.da="topleft", ratio=.16)
assignplot(dapc1, subset=1:84,cex=0.4)
compoplot(dapc1, posi="bottomright", lab=OB_lines$pop, ncol=1, xlab="individuals",cex.names=0.4,col=myCol)
loadingplot(dapc1$var.contr, thres=1e-3)
pressure
\
GDL_lines
GDL_lines<-read.snp("~/Dropbox/fly_demo/DAPC/autosomes_IBD_masked_biallelic_ZW184removed_Callability_masked_biallelic_neutral_sites.snp",multicore=TRUE)
GDL_lines[,2]
GDL_lines[,2]
a<-runif(10)
a
## Run PCA
``` {r}
pca_GDL <- glPca(GDL_lines,nf=50,parallel = require("parallel"),n.cores = 3)
knitr::opts_chunk$set(echo = TRUE)
dapc_GDL <- dapc(OB_lines, n.pca=25, n.da=5)
dapc_GDL <- dapc(GDL_lines, n.pca=25, n.da=5)
knitr::opts_chunk$set(echo = TRUE)
library("adegenet")
library("ggplot2")
library("reshape")
print(sessionInfo())
GDL_lines<-read.snp("~/Dropbox/fly_demo/DAPC/autosomes_IBD_masked_biallelic_ZW184removed_Callability_masked_biallelic_neutral_sites.snp",multicore=TRUE)
GDL_groups <- find.clusters(GDL_lines, max.n.clust=12,choose.n.clust=FALSE, criterion="diffNgroup", n.pca=120)
knitr::opts_chunk$set(echo = TRUE)
library("adegenet")
library("ggplot2")
library("reshape")
print(sessionInfo())
GDL_lines<-read.snp("~/Dropbox/fly_demo/DAPC/autosomes_IBD_masked_biallelic_ZW184removed_Callability_masked_biallelic_neutral_sites.snp",multicore=TRUE)
knitr::opts_chunk$set(echo = TRUE)
library("adegenet")
library("ggplot2")
library("reshape")
print(sessionInfo())
GDL_lines<-read.snp("~/Dropbox/fly_demo/DAPC/autosomes_IBD_masked_biallelic_ZW184removed_Callability_masked_biallelic_neutral_sites.snp",multicore=TRUE)
GDL_groups <- find.clusters(GDL_lines, max.n.clust=12,choose.n.clust=FALSE, criterion="diffNgroup", n.pca=120)
myCol = c("black","#D55E00","#E69F00","#009E73","#56B4E9")
scatter(dapc_GDL,1,2, ratio.pca=0.5, bg="white", pch=20, legend=TRUE, cell=2, cstar=1, col=myCol, solid=.7, cex=3, cex.sub=4,clab=0, mstree=FALSE, scree.da=TRUE,posi.da="topleft", ratio=.16)
GDL_groups <- find.clusters(GDL_lines, max.n.clust=12,choose.n.clust=FALSE, criterion="diffNgroup", n.pca=120)
knitr::opts_chunk$set(echo = TRUE)
library("adegenet")
library("ggplot2")
library("reshape")
print(sessionInfo())
GDL_lines<-read.snp("~/Dropbox/fly_demo/DAPC/autosomes_IBD_masked_biallelic_ZW184removed_Callability_masked_biallelic_neutral_sites.snp",multicore=TRUE)
GDL_groups <- find.clusters(GDL_lines, max.n.clust=12,choose.n.clust=FALSE, criterion="diffNgroup", n.pca=120)
plot(GDL_groups$Kstat, type="o", xlab="number of clusters (K)", ylab="BIC",col="blue", main="Detection based on BIC")
points(2, GDL_groups$Kstat[2], pch="x", cex=3)
pca_GDL <- glPca(GDL_lines,nf=50,parallel = require("parallel"),n.cores = 3)
myCol <- colorplot(pca_GDL$scores,pca_GDL$scores, transp=TRUE, cex=4, alpha=0.8, main="")
abline(h=0,v=0, col="lightgrey")
add.scatter.eig(pca_GDL$eig[1:40],2,1,2, posi="bottomleft", inset=0.15, ratio=.2)
dapc_GDL <- dapc(GDL_lines, n.pca=25, n.da=5)
myCol = c("black","#D55E00","#E69F00","#009E73","#56B4E9")
scatter(dapc_GDL,1,2, ratio.pca=0.5, bg="white", pch=20, legend=TRUE, cell=2, cstar=1, col=myCol, solid=.7, cex=3, cex.sub=4,clab=0, mstree=FALSE, scree.da=TRUE,posi.da="topleft", ratio=.16)
